{"version":3,"sources":["Services/NavigationService.js","Stores/CreateStore.js","Stores/Startup/Actions.js","Stores/Purchase/Actions.js","Stores/Home/Actions.js","Sagas/StartupSaga.js","Sagas/PurchaseSaga.js","Services/API.js","Sagas/HomeSaga.js","Sagas/index.js","Stores/Auth/Actions.js","Stores/Auth/Reducers.js","Stores/Purchase/Reducers.js","Stores/Home/Reducers.js","Theme/Colors.js","Theme/Fonts.js","Theme/Helpers.js","Containers/SplashScreen/SplashScreenStyle.js","Containers/SplashScreen/SplashScreen.js","Components/SearchBarSection.js","Containers/Home/Components/Slider.js","Containers/Home/Components/Product.js","Containers/Home/index.js","Containers/Feed/index.js","Containers/Cart/index.js","Containers/PurchasedHistory/index.js","Navigators/TabNavigator.js","Containers/Login/Components/LoginGoogleButton.js","Containers/Login/Components/LoginFacebookButton.js","Containers/Login/index.js","Containers/Search/index.js","Containers/DetailProduct/index.js","Navigators/AppNavigator.js","Containers/Root/RootScreen.js","Stores/index.js","App.js","serviceWorker.js","index.js"],"names":["navigator","persistConfig","key","storage","blacklist","createActions","startup","Types","Creators","StartupTypes","addProduct","addProductSuccess","PurchaseTypes","fetchHome","fetchHomeSuccess","fetchHomeFailure","HomeTypes","navigate","routeName","params","dispatch","NavigationActions","navigateAndReset","StackActions","reset","index","actions","setTopLevelNavigator","navigatorRef","goBack","back","NavigationService","item","put","PurchaseActions","alert","title","CONSTANT","axiosInstance","axios","create","baseURL","fetchHomeApi","request","url","method","call","response","data","HomeActions","console","log","JSON","stringify","root","all","takeLatest","STARTUP","ADD_PRODUCT","FETCH_HOME","signIn","signInSuccess","signInFailure","AuthTypes","reducer","createReducer","isLoading","error","auth","SIGN_IN","state","SIGN_IN_SUCCESS","SIGN_IN_FAILURE","products","ADD_PRODUCT_SUCCESS","addedProduct","concat","FETCH_HOME_SUCCESS","FETCH_HOME_FAILURE","transparent","white","text","primary","success","black","gray","background1","background2","darkPrimary","lightPrimary","icons","accent","size","StyleSheet","h1","fontSize","h2","h3","normal","medium","small","backgroundReset","backgroundColor","Colors","center","alignItems","justifyContent","colCenter","flexDirection","colCross","colMain","column","columnReverse","crossCenter","crossEnd","crossStart","crossStretch","fill","flex","fillCenter","fillCol","fillColCenter","fillColCross","fillColMain","fillColReverse","fillRow","fillRowCenter","fillRowCross","fillRowMain","fillRowReverse","fullSize","height","width","fullWidth","mainCenter","mainEnd","mainSpaceAround","mainSpaceBetween","mainStart","marginBottom","mirror","transform","scaleX","rotate90","rotate","rotate90Inverse","row","rowCenter","rowCross","rowMain","rowReverse","scrollSpaceAround","flexGrow","scrollSpaceBetween","selfStretch","alignSelf","textCenter","textAlign","textJustify","textLeft","textRight","container","logo","SplashScreen","View","style","Helpers","styles","Text","React","Component","SearchBarSection","placeholder","iconName","onPress","setValue","isBack","value","paddingLeft","paddingRight","TouchableOpacity","name","color","marginRight","marginTop","marginLeft","borderRadius","borderWidth","borderColor","TextInput","editable","onSubmitEditing","e","nativeEvent","defaultProps","Slider","category","padding","marginVertical","marginHorizontal","FlatList","renderItem","margin","source","uri","imageUrl","PlaceholderContent","ActivityIndicator","keyExtractor","id","horizontal","Product","product","image","titleStyle","Fonts","containerStyle","boxShadow","border","Home","useDispatch","useSelector","useEffect","Fragment","productPromo","Feed","Cart","PurchasedHistory","Purchase","_renderItem","subtitle","price","contentContainerStyle","leftAvatar","bottomDivider","chevron","leftComponent","centerComponent","toString","window","__DEV__","TabNavigator","createBottomTabNavigator","HomePage","screen","HomeScreen","path","FeedScreen","CartScreen","Profile","lazy","navigationOptions","LoginGoogleButton","useState","Auth","Platform","OS","document","addEventListener","renderGoogleLoginButton","gapi","removeEventListener","onSignIn","googleUser","user","getBasicProfile","id_token","getAuthResponse","AuthActions","provider","signin2","render","scope","longtitle","theme","onsuccess","onFailure","paddingTop","paddingBottom","LoginFacebookButton","FB","isSignin","setSignin","initFacebookLogin","checkLoginStatus","getLoginStatus","facebookLoginHandler","status","api","userData","result","facebookLogin","login","Login","loginForm","containerInput","mediumGreen","inputContainerStyle","borderBottomWidth","containerStyleCheckbox","usernameInputRef","useRef","passwordInputRef","isRemember","username","password","form","setForm","signin","current","shake","ref","underlineColorAndroid","onChangeText","leftIcon","className","labelStyle","inputStyle","secureTextEntry","checked","onIconPress","Search","keyword","setKeyword","dataSearch","setDataSearch","firstLoad","setFirstLoad","searchResults","filter","toLowerCase","includes","type","require","loadFont","DetailProduct","navigation","getParam","description","love","setLove","rightComponent","href","encodeURIComponent","target","ScrollView","ImageBackground","paddingHorizontal","paddingVertical","h4","preventDefault","StackNavigator","createStackNavigator","LoginScreen","SearchScreen","Detail","DetailScreen","initialRouteName","headerMode","lazyLoad","ContainerApp","createBrowserApp","createAppContainer","RootScreen","this","props","AppNavigator","connect","StartupActions","rootReducer","rootSaga","middleware","enhancers","sagaMiddleware","createSagaMiddleware","push","applyMiddleware","persistedReducer","persistReducer","store","createStore","compose","persistor","persistStore","run","configureStore","combineReducers","AuthReducer","PurchaseReducer","HomeReducer","colors","secondary","divider","Button","raised","App","loading","StatusBar","barStyle","Boolean","location","hostname","match","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.9286d643.chunk.js","sourcesContent":["import { NavigationActions, StackActions } from \"react-navigation\";\n\n/**\n * The navigation is implemented as a service so that it can be used outside of components, for example in sagas.\n *\n * @see https://reactnavigation.org/docs/en/navigating-without-navigation-prop.html\n */\n\nlet navigator;\n\n/**\n * This function is called when the RootScreen is created to set the navigator instance to use.\n */\nfunction setTopLevelNavigator(navigatorRef) {\n  navigator = navigatorRef;\n}\n\n/**\n * Call this function when you want to navigate to a specific route.\n *\n * @param routeName The name of the route to navigate to. Routes are defined in RootScreen using createStackNavigator()\n * @param params Route parameters.\n */\nfunction navigate(routeName, params) {\n  navigator.dispatch(\n    NavigationActions.navigate({\n      routeName,\n      params\n    })\n  );\n}\n\nfunction goBack() {\n  navigator.dispatch(NavigationActions.back({ key: null }));\n}\n\n/**\n * Call this function when you want to navigate to a specific route AND reset the navigation history.\n *\n * That means the user cannot go back. This is useful for example to redirect from a splashscreen to\n * the main screen: the user should not be able to go back to the splashscreen.\n *\n * @param routeName The name of the route to navigate to. Routes are defined in RootScreen using createStackNavigator()\n * @param params Route parameters.\n */\nfunction navigateAndReset(routeName, params) {\n  navigator.dispatch(\n    StackActions.reset({\n      index: 0,\n      key: null,\n      actions: [\n        NavigationActions.navigate({\n          routeName,\n          params\n        })\n      ]\n    })\n  );\n}\n\nexport default {\n  navigate,\n  navigateAndReset,\n  setTopLevelNavigator,\n  goBack\n};\n","import { applyMiddleware, compose, createStore } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\n// import { Platform } from 'react-native';\nimport { persistReducer, persistStore } from 'redux-persist';\n// import AsyncStorage from '@react-native-community/async-storage';\n\n/**\n * This import defaults to localStorage for web and AsyncStorage for react-native.\n *\n * Keep in mind this storage *is not secure*. Do not use it to store sensitive information\n * (like API tokens, private and sensitive data, etc.).\n *\n * If you need to store sensitive information, use redux-persist-sensitive-storage.\n * @see https://github.com/CodingZeal/redux-persist-sensitive-storage\n */\nimport storage from 'redux-persist/lib/storage'\n\n\nconst persistConfig = {\n  key: 'root',\n  storage: storage,\n  /**\n   * Blacklist state that we do not need/want to persist\n   */\n  blacklist: [\n    'Auth',\n  ],\n}\n\nexport default (rootReducer, rootSaga) => {\n  const middleware = []\n  const enhancers = []\n\n  // Connect the sagas to the redux store\n  const sagaMiddleware = createSagaMiddleware()\n  middleware.push(sagaMiddleware)\n\n  enhancers.push(applyMiddleware(...middleware))\n\n  // Redux persist\n  const persistedReducer = persistReducer(persistConfig, rootReducer)\n\n  const store = createStore(persistedReducer, compose(...enhancers))\n  const persistor = persistStore(store)\n\n  // Kick off the root saga\n  sagaMiddleware.run(rootSaga)\n\n  return { store, persistor }\n}\n","import { createActions } from 'reduxsauce'\n\nconst { Types, Creators } = createActions({\n  // This action is triggered when the application starts\n  startup: null,\n})\n\nexport const StartupTypes = Types\nexport default Creators\n","import { createActions } from 'reduxsauce'\n\nconst { Types, Creators } = createActions({\n  // This action is triggered when the application starts\n  addProduct: ['item'],\n  addProductSuccess: ['data'],\n});\n\nexport const PurchaseTypes = Types;\nexport default Creators;\n","import { createActions } from 'reduxsauce'\n\nconst { Types, Creators } = createActions({\n  // This action is triggered when the application starts\n  fetchHome: null,\n  fetchHomeSuccess: ['data'],\n  fetchHomeFailure: ['error'],\n});\n\nexport const HomeTypes = Types;\nexport default Creators;\n","import { put } from 'redux-saga/effects'\nimport NavigationService from '../Services/NavigationService'\n\n/**\n * The startup saga is the place to define behavior to execute when the application starts.\n */\nexport function* startup() {\n  NavigationService.navigateAndReset('Login');\n}\n","import { put } from \"redux-saga/effects\";\nimport PurchaseActions from \"../Stores/Purchase/Actions\";\n\nexport function* addProduct({ item }) {\n  yield put(PurchaseActions.addProductSuccess(item));\n  alert(`Produk ${item.title} berhasil dimasukkan ke keranjang belanja anda`);\n}\n","import axios from 'axios';\n\nexport const CONSTANT = {\n\tBASE_URL: 'https://private-4639ce-ecommerce56.apiary-mock.com',\n\tAPI_HOME : '/home',\n}\n\nexport const axiosInstance = axios.create({\n  baseURL: CONSTANT.BASE_URL,\n});\n\nexport const fetchHomeApi = () => {\n\tconst request = axiosInstance.request({\n\t\turl: CONSTANT.API_HOME,\n\t\tmethod: 'GET',\n\t});\n\treturn request;\n}","import { put, call } from \"redux-saga/effects\";\nimport { fetchHomeApi } from \"../Services/API\";\nimport HomeActions from \"../Stores/Home/Actions\";\n\nexport function* fetchHome() {\n  try {\n    const response = yield call(fetchHomeApi);\n    if (!response) return \"Something wrong, please try again later.\";\n\n    const { data } = response;\n    yield put(HomeActions.fetchHomeSuccess(data[0].data));\n  } catch (error) {\n    console.log(`Error : ${JSON.stringify(error)}`);\n  }\n}\n","import { takeLatest, all } from 'redux-saga/effects'\nimport { StartupTypes } from '../Stores/Startup/Actions';\nimport { PurchaseTypes } from '../Stores/Purchase/Actions';\nimport { HomeTypes } from '../Stores/Home/Actions';\nimport { startup } from './StartupSaga';\nimport { addProduct } from './PurchaseSaga';\nimport { fetchHome } from './HomeSaga';\n\nexport default function* root() {\n\n  yield all([\n    /**\n     * @see https://redux-saga.js.org/docs/basics/UsingSagaHelpers.html\n     */\n    // Run the startup saga when the application starts\n    takeLatest(StartupTypes.STARTUP, startup),\n    takeLatest(PurchaseTypes.ADD_PRODUCT, addProduct),\n    takeLatest(HomeTypes.FETCH_HOME, fetchHome),\n  ]);\n}\n","import { createActions } from 'reduxsauce'\n\nconst { Types, Creators } = createActions({\n  // This action is triggered when the application starts\n  signIn: ['form'],\n  signInSuccess: ['auth'],\n  signInFailure: ['error'],\n});\n\nexport const AuthTypes = Types;\nexport default Creators;\n","/**\n * Reducers specify how the application's state changes in response to actions sent to the store.\n *\n * @see https://redux.js.org/basics/reducers\n */\n\n\nimport { createReducer } from 'reduxsauce'\nimport { AuthTypes } from './Actions'\n\nconst initialState = {\n  isLoading: false,\n  error: null,\n  auth: null,\n}\n\nexport const signIn = (state) => ({\n  ...state,\n  isLoading: true,\n});\n\nexport const signInSuccess = (state, { auth }) => ({\n  ...state,\n  isLoading: false,\n  auth\n});\n\nexport const signInFailure = (state, { error }) => ({\n  ...state,\n  isLoading: false,\n  error\n});\n\n\n/**\n * @see https://github.com/infinitered/reduxsauce#createreducer\n */\nexport const reducer = createReducer(initialState, {\n  [AuthTypes.SIGN_IN]: signIn,\n  [AuthTypes.SIGN_IN_SUCCESS]: signInSuccess,\n  [AuthTypes.SIGN_IN_FAILURE]: signInFailure,\n})\n","/**\n * Reducers specify how the application's state changes in response to actions sent to the store.\n *\n * @see https://redux.js.org/basics/reducers\n */\n\nimport { createReducer } from \"reduxsauce\";\nimport { PurchaseTypes } from \"./Actions\";\n\nconst initialState = {\n  products: [],\n  error: null,\n  isLoading: false\n};\n\nexport const addProduct = state => ({\n  ...state,\n  isLoading: true\n});\n\nexport const addProductSuccess = (state, { data }) => {\n  const products = [...state.products];\n  const addedProduct = products.concat(data);\n  return {\n    ...state,\n    isLoading: false,\n    products: addedProduct\n  };\n};\n\n/**\n * @see https://github.com/infinitered/reduxsauce#createreducer\n */\nexport const reducer = createReducer(initialState, {\n  [PurchaseTypes.ADD_PRODUCT]: addProduct,\n  [PurchaseTypes.ADD_PRODUCT_SUCCESS]: addProductSuccess\n});\n","/**\n * Reducers specify how the application's state changes in response to actions sent to the store.\n *\n * @see https://redux.js.org/basics/reducers\n */\n\n\nimport { createReducer } from 'reduxsauce'\nimport { HomeTypes } from './Actions'\n\nconst initialState = {\n  isLoading: false,\n  error: null,\n  data: null,\n}\n\nexport const fetchHome = (state) => ({\n  ...state,\n  isLoading: true,\n});\n\nexport const fetchHomeSuccess = (state, { data }) => ({\n  ...state,\n  isLoading: false,\n  data\n});\n\nexport const fetchHomeFailure = (state, { error }) => ({\n  ...state,\n  isLoading: false,\n  error\n});\n\n\n/**\n * @see https://github.com/infinitered/reduxsauce#createreducer\n */\nexport const reducer = createReducer(initialState, {\n  [HomeTypes.FETCH_HOME]: fetchHome,\n  [HomeTypes.FETCH_HOME_SUCCESS]: fetchHomeSuccess,\n  [HomeTypes.FETCH_HOME_FAILURE]: fetchHomeFailure,\n})\n","/**\n * This file contains the application's colors.\n *\n * Define color here instead of duplicating them throughout the components.\n * That allows to change them more easily later on.\n */\n\nexport default {\n  transparent: \"rgba(0,0,0,0)\",\n  // Example colors:\n  white: \"#ffffff\",\n  text: \"#212529\",\n  primary: \"#8BC34A\",\n  success: \"#28a745\",\n  error: \"#dc3545\",\n  black: \"#1a1917\",\n  gray: \"#888888\",\n  background1: \"#B721FF\",\n  background2: \"#21D4FD\",\n\n  darkPrimary: \"#689F38\",\n  lightPrimary: \"#DCEDC8\",\n  icons: \"#212121\",\n  accent: \"#4CAF50\",\n  text: \"#212121\",\n  textSecondary: \"#757575\",\n  divider: \"#BDBDBD\"\n};\n","import { StyleSheet } from 'react-native'\n\nconst size = {\n  h1: 38,\n  h2: 34,\n  h3: 30,\n  input: 18,\n  regular: 17,\n  medium: 14,\n  small: 12,\n}\n\nexport default StyleSheet.create({\n  h1: {\n    fontSize: size.h1,\n  },\n  h2: {\n    fontSize: size.h2,\n  },\n  h3: {\n    fontSize: size.h3,\n  },\n  normal: {\n    fontSize: size.regular,\n  },\n  medium: {\n    fontSize: size.medium,\n  },\n  small: {\n    fontSize: size.small,\n  }\n})\n","import { StyleSheet } from \"react-native\";\nimport Colors from \"./Colors\";\n\nexport default StyleSheet.create({\n  backgroundReset: {\n    backgroundColor: Colors.transparent\n  },\n  center: {\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  colCenter: {\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    justifyContent: \"center\"\n  },\n  colCross: {\n    alignItems: \"center\",\n    flexDirection: \"column\"\n  },\n  colMain: {\n    flexDirection: \"column\",\n    justifyContent: \"center\"\n  },\n  column: {\n    flexDirection: \"column\"\n  },\n  columnReverse: {\n    flexDirection: \"column-reverse\"\n  },\n  crossCenter: {\n    alignItems: \"center\"\n  },\n  crossEnd: {\n    alignItems: \"flex-end\"\n  },\n  crossStart: {\n    alignItems: \"flex-start\"\n  },\n  crossStretch: {\n    alignItems: \"stretch\"\n  },\n  fill: {\n    flex: 1\n  },\n  fillCenter: {\n    alignItems: \"center\",\n    flex: 1,\n    justifyContent: \"center\"\n  },\n  fillCol: {\n    flex: 1,\n    flexDirection: \"column\"\n  },\n  fillColCenter: {\n    alignItems: \"center\",\n    flex: 1,\n    flexDirection: \"column\",\n    justifyContent: \"center\"\n  },\n  fillColCross: {\n    alignItems: \"center\",\n    flex: 1,\n    flexDirection: \"column\"\n  },\n  fillColMain: {\n    flex: 1,\n    flexDirection: \"column\",\n    justifyContent: \"center\"\n  },\n  fillColReverse: {\n    flex: 1,\n    flexDirection: \"column-reverse\"\n  },\n  fillRow: {\n    flex: 1,\n    flexDirection: \"row\"\n  },\n  fillRowCenter: {\n    alignItems: \"center\",\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"center\"\n  },\n  fillRowCross: {\n    alignItems: \"center\",\n    flex: 1,\n    flexDirection: \"row\"\n  },\n  fillRowMain: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"center\"\n  },\n  fillRowReverse: {\n    flex: 1,\n    flexDirection: \"row-reverse\"\n  },\n  fullSize: {\n    height: \"100%\",\n    width: \"100%\"\n  },\n  fullWidth: {\n    width: \"100%\"\n  },\n  mainCenter: {\n    justifyContent: \"center\"\n  },\n  mainEnd: {\n    justifyContent: \"flex-end\"\n  },\n  mainSpaceAround: {\n    justifyContent: \"space-around\"\n  },\n  mainSpaceBetween: {\n    justifyContent: \"space-between\"\n  },\n  mainStart: {\n    justifyContent: \"flex-start\",\n    marginBottom: \"20px\"\n  },\n  mirror: {\n    transform: [{ scaleX: -1 }]\n  },\n  rotate90: {\n    transform: [{ rotate: \"90deg\" }]\n  },\n  rotate90Inverse: {\n    transform: [{ rotate: \"-90deg\" }]\n  },\n  row: {\n    flexDirection: \"row\"\n  },\n  rowCenter: {\n    alignItems: \"center\",\n    flexDirection: \"row\",\n    justifyContent: \"center\"\n  },\n  rowCross: {\n    alignItems: \"center\",\n    flexDirection: \"row\"\n  },\n  rowMain: {\n    flexDirection: \"row\",\n    justifyContent: \"center\"\n  },\n  rowReverse: {\n    flexDirection: \"row-reverse\"\n  },\n  scrollSpaceAround: {\n    flexGrow: 1,\n    justifyContent: \"space-around\"\n  },\n  scrollSpaceBetween: {\n    flexGrow: 1,\n    justifyContent: \"space-between\"\n  },\n  selfStretch: {\n    alignSelf: \"stretch\"\n  },\n  textCenter: {\n    textAlign: \"center\"\n  },\n  textJustify: {\n    textAlign: \"justify\"\n  },\n  textLeft: {\n    textAlign: \"left\"\n  },\n  textRight: {\n    textAlign: \"right\"\n  }\n});\n","import { StyleSheet } from 'react-native'\nimport { Colors } from '../../Theme'\n\nexport default StyleSheet.create({\n  container: {\n    backgroundColor: Colors.primary,\n  },\n  logo: {\n    backgroundColor: Colors.white,\n    height: 70,\n    width: 70,\n  },\n})\n","import React from 'react'\nimport { Text, View } from 'react-native'\nimport styles from './SplashScreenStyle'\nimport { Helpers } from '../../Theme'\n\nexport default class SplashScreen extends React.Component {\n  render() {\n    return (\n      <View style={[Helpers.fillRowCenter, styles.container]}>\n        <View style={[Helpers.center, styles.logo]}>\n          {/* You will probably want to insert your logo here */}\n          <Text>LOGO</Text>\n        </View>\n      </View>\n    )\n  }\n}\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { TouchableOpacity, TextInput } from \"react-native\";\nimport { View } from \"react-native\";\nimport { SearchBar } from \"react-native-elements\";\nimport Icon from \"react-native-vector-icons/FontAwesome\";\nimport NavigationService from \"../Services/NavigationService\";\nimport { Helpers, Fonts } from \"../Theme\";\n\nfunction SearchBarSection({\n  placeholder,\n  iconName,\n  onPress,\n  setValue,\n  value,\n  isBack\n}) {\n  return (\n    <View\n      style={[\n        Helpers.mainStart,\n        Helpers.column,\n        { paddingLeft: 10, paddingRight: 10 }\n      ]}\n    >\n      <View style={[Helpers.row]}>\n        <View style={[Helpers.center]}>\n          <TouchableOpacity\n            onPress={() => {\n              if (isBack) {\n                NavigationService.goBack();\n              }\n            }}\n          >\n            <Icon\n              name={iconName}\n              size={25}\n              color=\"red\"\n              style={{ marginRight: \"10px\" }}\n            />\n          </TouchableOpacity>\n        </View>\n        <View\n          style={[\n            Helpers.fill,\n            Helpers.column,\n            {\n              marginTop: 5,\n              marginLeft: 5,\n              marginBottom: 5,\n              borderRadius: 20,\n              borderWidth: 1,\n              borderColor: \"gray\"\n            }\n          ]}\n        >\n          <TouchableOpacity onPress={onPress}>\n            <View style={[Helpers.row, { paddingLeft: 10 }]}>\n              <View style={[Helpers.mainCenter]}>\n                <Icon name=\"search\" size={20} color=\"gray\" />\n              </View>\n              <TextInput\n                style={{ height: 40, width: \"100%\", paddingLeft: 10 }}\n                placeholder={placeholder}\n                editable={!onPress}\n                onSubmitEditing={e => {\n                  setValue(e.nativeEvent.text);\n                  console.log(e.nativeEvent.text);\n                }}\n              />\n            </View>\n          </TouchableOpacity>\n        </View>\n      </View>\n    </View>\n  );\n}\n\nSearchBarSection.propTypes = {\n  placeholder: PropTypes.string,\n  iconName: PropTypes.string,\n  onPress: PropTypes.func,\n  data: PropTypes.array,\n  setValue: PropTypes.func,\n  value: PropTypes.string\n};\n\nSearchBarSection.defaultProps = {\n  isBack: true\n};\n\nexport default SearchBarSection;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { View, FlatList, StyleSheet, ActivityIndicator } from \"react-native\";\nimport { Text, Image } from \"react-native-elements\";\nimport Icon from \"react-native-vector-icons/FontAwesome\";\nimport { Helpers, Fonts } from \"../../../Theme\";\n\nfunction Slider({ category }) {\n  const renderItem = ({ item }) => {\n    return (\n      <View style={([Helpers.column], { marginBottom: 20 })}>\n        <View style={{ margin: 10 }}>\n          <Image\n            source={{ uri: item.imageUrl }}\n            style={{ width: 80, height: 80 }}\n            PlaceholderContent={<ActivityIndicator />}\n          />\n        </View>\n        <View>\n          <Text style={styles.title}>{item.name}</Text>\n        </View>\n      </View>\n    );\n  };\n\n  const styles = StyleSheet.create({\n    container: {\n      flex: 1\n    },\n    item: {\n      backgroundColor: \"#f9c2ff\",\n      padding: 20,\n      marginVertical: 8,\n      marginHorizontal: \"15px\"\n    },\n    title: {\n      fontSize: 15,\n      textAlign: \"center\"\n    }\n  });\n\n  return (\n    <View>\n      <FlatList\n        data={category || []}\n        renderItem={renderItem}\n        keyExtractor={item => {\n          return `id-${item.id}`;\n        }}\n        horizontal\n      />\n    </View>\n  );\n}\n\nSlider.propTypes = {\n  category: PropTypes.array\n};\n\nexport default Slider;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { View, FlatList, StyleSheet, TouchableOpacity } from \"react-native\";\nimport { Text, Card, Button } from \"react-native-elements\";\nimport Icon from \"react-native-vector-icons/FontAwesome\";\nimport { Helpers, Fonts } from \"../../../Theme\";\nimport NavigationService from \"../../../Services/NavigationService\";\n\nfunction Product({ product }) {\n  const _renderItem = ({ item, index }) => {\n    return (\n      <TouchableOpacity\n        onPress={() => {\n          NavigationService.navigate(\"Detail\", { item });\n        }}\n      >\n        <Card\n          title={item.title}\n          image={{ uri: item.imageUrl }}\n          titleStyle={Fonts.h3}\n          containerStyle={{\n            boxShadow: \"0 1px 6px 0 rgba(0,0,0,0.1)\",\n            border: \"none\",\n            borderRadius: \"5px\",\n            marginBottom: 15,\n            padding: \"10px 0\"\n          }}\n        >\n          <View style={[Helpers.row]}>\n            <View style={[Helpers.center, { marginRight: 10 }]}>\n              <Icon\n                name=\"heart\"\n                size={35}\n                color={index % 2 === 0 ? \"red\" : \"gray\"}\n              />\n            </View>\n          </View>\n        </Card>\n      </TouchableOpacity>\n    );\n  };\n\n  const styles = StyleSheet.create({\n    container: {\n      flex: 1\n    },\n    item: {\n      backgroundColor: \"#f9c2ff\",\n      padding: 20,\n      marginVertical: 8,\n      marginHorizontal: 16\n    },\n    title: {\n      fontSize: 32\n    }\n  });\n\n  return (\n    <FlatList\n      data={product || []}\n      renderItem={_renderItem}\n      keyExtractor={item => {\n        return `id-${item.id}`;\n      }}\n    />\n  );\n}\n\nProduct.propTypes = {\n  product: PropTypes.array\n};\n\nexport default Product;\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Platform, ActivityIndicator } from \"react-native\";\nimport SearchBarSection from \"../../Components/SearchBarSection\";\nimport Slider from \"./Components/Slider\";\nimport Product from \"./Components/Product\";\nimport NavigationService from \"../../Services/NavigationService\";\nimport HomeActions from \"../../Stores/Home/Actions\";\n\nfunction Home() {\n  const dispatch = useDispatch();\n  const { isLoading, data } = useSelector(state => state.Home);\n\n  useEffect(() => {\n    dispatch(HomeActions.fetchHome());\n  }, []);\n\n  const toSearchPage = () => {\n    NavigationService.navigate(\"Search\");\n  };\n\n  return (\n    <React.Fragment>\n      <SearchBarSection iconName=\"heart\" onPress={toSearchPage} />\n      {!isLoading && <Slider category={(data && data.category) || []} />}\n      {isLoading && <ActivityIndicator />}\n      {!isLoading && <Product product={(data && data.productPromo) || []} />}\n    </React.Fragment>\n  );\n}\n\nexport default Home;\n","'use strict';\n\nimport React from 'react';\nimport {\n  StyleSheet,\n  View,\n  Text\n} from 'react-native';\nimport { Helpers } from '../../Theme';\n\nfunction Feed() {\n    return (\n      <View style={[Helpers.fillCenter]}>\n      \t<Text>Hello Feed Page</Text>\n      </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n\n});\n\n\nexport default Feed;","'use strict';\n\nimport React from 'react';\nimport {\n  StyleSheet,\n  View,\n  Text\n} from 'react-native';\nimport { Helpers } from '../../Theme';\n\nfunction Cart() {\n    return (\n      <View style={[Helpers.fillCenter]}>\n      \t<Text>Hello Cart Page</Text>\n      </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n\n});\n\n\nexport default Cart;","\"use strict\";\n\nimport React from \"react\";\nimport { StyleSheet, FlatList, Platform } from \"react-native\";\nimport { useSelector } from \"react-redux\";\nimport { Header, ListItem } from \"react-native-elements\";\nimport Icon from \"react-native-vector-icons/FontAwesome\";\nimport NavigationService from \"../../Services/NavigationService\";\n\nfunction PurchasedHistory() {\n  // const dispatch = useDispatch();\n  const { products } = useSelector(state => state.Purchase);\n\n  const _renderItem = ({ item }) => (\n    <ListItem\n      title={item.title}\n      subtitle={`${item.price}`}\n      contentContainerStyle={{ paddingLeft: 10 }}\n      leftAvatar={{\n        source: item.imageUrl && { uri: item.imageUrl }\n      }}\n      onPress={() => {\n        NavigationService.navigate(\"Detail\", { item });\n      }}\n      bottomDivider\n      chevron\n    />\n  );\n\n  const RenderListSearch = () => {\n    return (\n      <FlatList\n        keyExtractor={item => item.id.toString()}\n        data={products}\n        renderItem={_renderItem}\n      />\n    );\n  };\n\n  return (\n    <React.Fragment>\n      <Header\n        leftComponent={\n          <Icon\n            name=\"arrow-left\"\n            size={20}\n            color=\"white\"\n            onPress={() => {\n              NavigationService.goBack();\n            }}\n          />\n        }\n        centerComponent={{\n          text: \"Purchased History\",\n          style: { color: \"#fff\", fontSize: 20 }\n        }}\n      />\n      <RenderListSearch />\n    </React.Fragment>\n  );\n}\n\nexport default PurchasedHistory;\n","import { createBottomTabNavigator } from 'react-navigation-tabs';\n\nimport HomeScreen from '../Containers/Home';\nimport FeedScreen from '../Containers/Feed';\nimport CartScreen from '../Containers/Cart';\nimport PurchasedHistory from '../Containers/PurchasedHistory';\nwindow.__DEV__ = true;\n\nconst TabNavigator = createBottomTabNavigator(\n  {\n    HomePage: {\n      screen: HomeScreen,\n      path: 'home'\n    },\n    Feed: {\n      screen: FeedScreen,\n      path: 'feed'\n    },\n    Cart: {\n      screen: CartScreen,\n      path: 'cart'\n    },\n    Profile: {\n      screen: PurchasedHistory,\n      path: 'profile'\n    }\n  },\n  {\n    lazy: true,\n  }\n);\n\nHomeScreen.navigationOptions = {\n  title:'Home'\n}\n\nFeedScreen.navigationOptions = {\n  title:'Feed'\n}\n\nCartScreen.navigationOptions = {\n  title:'Cart'\n}\n\nPurchasedHistory.navigationOptions = {\n  title:'Profile'\n}\n\nexport default TabNavigator;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport AuthActions from \"../../../Stores/Auth/Actions\";\nimport { Button } from \"react-native-elements\";\nimport { Platform, View } from \"react-native\";\n\nfunction LoginGoogleButton() {\n  const [isSignin, setSignin] = useState(false);\n  const { auth } = useSelector(state => state.Auth);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (Platform.OS === \"web\") {\n      document.addEventListener(\"google-loaded\", renderGoogleLoginButton);\n      window.gapi && renderGoogleLoginButton();\n    }\n\n    return () => {\n      if (Platform.OS === \"web\") {\n        document.removeEventListener(\"google-loaded\", renderGoogleLoginButton);\n      }\n    };\n  }, []);\n\n  const onSignIn = googleUser => {\n    let user = googleUser.getBasicProfile();\n    let id_token = googleUser.getAuthResponse().id_token;\n\n    console.log(\"google user obj\", user);\n    console.log(\"google_id_token\", id_token);\n    dispatch(\n      AuthActions.signInSuccess({\n        ...user,\n        id_token,\n        provider: \"google\"\n      })\n    );\n    // plus any other logic here\n  };\n\n  const renderGoogleLoginButton = () => {\n    console.log(\"rendering google signin button\");\n    window.gapi.signin2.render(\"my-signin2\", {\n      scope: \"profile email\",\n      width: 250,\n      height: 40,\n      longtitle: true,\n      theme: \"dark\",\n      onsuccess: onSignIn,\n      onFailure: onFailure\n    });\n  };\n\n  const onFailure = error => {\n    alert(`Something Wrong when signin to google : ${error}`);\n  };\n\n  const logout = async () => {\n    console.log(\"logout\");\n\n    let auth2 = window.gapi && window.gapi.auth2.getAuthInstance();\n    console.log(auth2, \"auth2 instance\");\n    if (auth2) {\n      try {\n        const response = await auth2.signOut();\n        setSignin(false);\n        console.log(\"Logged out successfully\");\n      } catch (error) {\n        console.log(\"Error while logging out\", error);\n      }\n    } else {\n      console.log(\"error while logging out\");\n    }\n  };\n\n  return (\n    <React.Fragment>\n      {Platform.OS === \"web\" ? (\n        <div>\n          <div id=\"my-signin2\" style={{ paddingTop: 10 }} />\n          <br />\n        </div>\n      ) : (\n        <View style={{ paddingBottom: 20 }}>\n          <Button title=\"Login With Google\" />\n        </View>\n      )}\n    </React.Fragment>\n  );\n}\n\nexport default LoginGoogleButton;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport AuthActions from \"../../../Stores/Auth/Actions\";\nimport { View } from \"react-native\";\nimport { Button } from \"react-native-elements\";\nimport { Platform } from \"react-native\";\n\nfunction LoginFacebookButton() {\n  let FB;\n  const [isSignin, setSignin] = useState(false);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (Platform.OS === \"web\") {\n      window.addEventListener(\"FBInit\", initFacebookLogin);\n    }\n\n    return () => {\n      if (Platform.OS === \"web\") {\n        window.removeEventListener(\"FBInit\", initFacebookLogin);\n      }\n    };\n  }, []);\n\n  /**\n   * Init FB object and check Facebook Login status\n   */\n  const initFacebookLogin = () => {\n    FB = window.FB;\n    console.log(\"FB\", FB);\n    checkLoginStatus();\n  };\n\n  /**\n   * Check login status\n   */\n  const checkLoginStatus = () => {\n    FB.getLoginStatus(facebookLoginHandler);\n  };\n\n  /**\n   * Check login status and call login api is user is not logged in\n   */\n  const facebookLogin = () => {\n    console.log(FB);\n    if (!FB) {\n      initFacebookLogin();\n      facebookLogin();\n      return;\n    }\n\n    FB.getLoginStatus(response => {\n      if (response.status === \"connected\") {\n        facebookLoginHandler(response);\n      } else {\n        FB.login(facebookLoginHandler, { scope: \"public_profile\" });\n      }\n    });\n  };\n\n  /**\n   * Handle login response\n   */\n  const facebookLoginHandler = response => {\n    if (response.status === \"connected\") {\n      FB.api(\"/me\", userData => {\n        let result = {\n          ...response,\n          user: userData\n        };\n        console.log(result);\n        setSignin(true);\n        dispatch(\n          AuthActions.signInSuccess({ ...userData, provider: \"facebook\" })\n        );\n      });\n    } else {\n      setSignin(false);\n    }\n  };\n\n  return (\n    <View>\n      {!isSignin && (\n        <Button title=\"Login With Facebook\" onPress={facebookLogin} />\n      )}\n    </View>\n  );\n}\n\nexport default LoginFacebookButton;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport AuthActions from \"../../Stores/Auth/Actions\";\nimport { View, StyleSheet, Platform } from \"react-native\";\nimport { Button, Input, Text, CheckBox } from \"react-native-elements\";\nimport Icon from \"react-native-vector-icons/FontAwesome\";\nimport { Helpers, Fonts, Colors } from \"../../Theme\";\nimport NavigationService from \"../../Services/NavigationService\";\nimport LoginGoogleButton from \"./Components/LoginGoogleButton\";\nimport LoginFacebookButton from \"./Components/LoginFacebookButton\";\n\nfunction Login() {\n  const styles = StyleSheet.create({\n    loginForm: {\n      backgroundColor: \"white\",\n      marginLeft: 15,\n      marginRight: 15,\n      paddingTop: 10,\n      paddingBottom: 10,\n      // height: hp(60),\n      borderRadius: 10\n    },\n    containerInput: {\n      marginBottom: 15,\n      borderWidth: 1,\n      borderColor: Colors.mediumGreen,\n      borderRadius: 5\n    },\n    inputContainerStyle: {\n      borderBottomWidth: 0\n    },\n    containerStyleCheckbox: {\n      backgroundColor: \"white\",\n      borderWidth: 0,\n      paddingTop: 0,\n      paddingLeft: 0,\n      paddingBottom: 0,\n      paddingRight: 0,\n      marginTop: 0,\n      marginBottom: 0\n    },\n    titleStyle: {\n      fontSize: 14\n    }\n  });\n\n  const usernameInputRef = useRef(null);\n  const passwordInputRef = useRef(null);\n\n  const [form, setForm] = useState({\n    isRemember: false,\n    username: \"\",\n    password: \"\",\n    provider: \"form\"\n  });\n\n  const { auth } = useSelector(state => state.Auth);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (auth) {\n      NavigationService.navigateAndReset(\"Home\");\n    }\n  }, [auth]);\n\n  const signin = () => {\n    if (form.username === \"\" || form.password === \"\") {\n      usernameInputRef.current.shake();\n      passwordInputRef.current.shake();\n      return;\n    }\n    dispatch(AuthActions.signInSuccess(form));\n  };\n\n  const renderForm = () => (\n    <React.Fragment>\n      <View styles={[]}>\n        <Text style={Fonts.h1}>Login</Text>\n      </View>\n      <View style={[Helpers.column, { width: \"90%\", paddingTop: 10 }]}>\n        <Input\n          ref={usernameInputRef}\n          containerStyle={styles.containerInput}\n          inputContainerStyle={styles.inputContainerStyle}\n          underlineColorAndroid=\"transparent\"\n          placeholder=\"username\"\n          onChangeText={text => {\n            setForm({\n              ...form,\n              username: text\n            });\n          }}\n          value={form.username}\n          leftIcon={\n            <Icon name=\"user\" size={15} color=\"gray\" className=\"input-icon\" />\n          }\n          className=\"input\"\n        />\n\n        <Input\n          ref={passwordInputRef}\n          labelStyle={Fonts.medium}\n          inputStyle={Fonts.medium}\n          containerStyle={styles.containerInput}\n          inputContainerStyle={styles.inputContainerStyle}\n          underlineColorAndroid=\"white\"\n          secureTextEntry\n          placeholder=\"password\"\n          onChangeText={text => {\n            setForm({\n              ...form,\n              password: text\n            });\n          }}\n          value={form.password}\n          leftIcon={\n            <Icon name=\"lock\" size={15} color=\"gray\" className=\"input-icon\" />\n          }\n          className=\"input\"\n        />\n        <View\n          style={[Helpers.row, Helpers.mainSpaceBetween, Helpers.fullWidth]}\n        >\n          <CheckBox\n            title=\"Remember Me\"\n            containerStyle={styles.containerStyleCheckbox}\n            checked={form.isRemember}\n            onIconPress={() => {\n              console.log(usernameInputRef.current);\n              setForm({\n                ...form,\n                isRemember: !form.isRemember\n              });\n            }}\n          />\n          <Button\n            titleStyle={styles.titleStyle}\n            title=\"Sign In\"\n            onPress={signin}\n            className=\"btn\"\n          />\n        </View>\n      </View>\n    </React.Fragment>\n  );\n\n  return (\n    <View style={[Helpers.fill, Helpers.colMain]}>\n      <View style={[Helpers.center, styles.loginForm]}>\n        {renderForm()}\n        <View style={{ marginTop: \"50px\" }}>\n          <LoginGoogleButton />\n          <LoginFacebookButton />\n        </View>\n      </View>\n    </View>\n  );\n}\n\nexport default Login;\n","\"use strict\";\n\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { StyleSheet, View, Text, FlatList, Platform } from \"react-native\";\nimport { ListItem } from \"react-native-elements\";\nimport Icon from \"react-native-vector-icons/MaterialIcons\";\nimport SearchBar from \"../../Components/SearchBarSection\";\nimport { Helpers } from \"../../Theme\";\nimport NavigationService from \"../../Services/NavigationService\";\n\nfunction Search() {\n  const {\n    data: { productPromo: product }\n  } = useSelector(state => state.Home);\n\n  const onSearch = () => {\n    return product.filter(item =>\n      item.title.toLowerCase().includes(keyword.toLowerCase())\n    );\n  };\n\n  const [keyword, setKeyword] = useState(\"\");\n  const [dataSearch, setDataSearch] = useState([]);\n  const [firstLoad, setFirstLoad] = useState(true);\n\n  useEffect(() => {\n    if (!firstLoad) {\n      const searchResults = onSearch();\n      setDataSearch(searchResults);\n    }\n  }, [keyword]);\n\n  useEffect(() => {\n    setFirstLoad(false);\n  }, []);\n\n  const _renderItem = ({ item }) => (\n    <ListItem\n      title={item.title}\n      subtitle={`${item.price}`}\n      contentContainerStyle={{ paddingLeft: 10 }}\n      leftAvatar={{\n        source: item.imageUrl && { uri: item.imageUrl }\n      }}\n      onPress={() => {\n        NavigationService.navigate(\"Detail\", { item });\n      }}\n      bottomDivider\n      chevron\n    />\n  );\n\n  const RenderListSearch = () => {\n    return (\n      <FlatList\n        keyExtractor={item => item.id.toString()}\n        data={dataSearch}\n        renderItem={_renderItem}\n      />\n    );\n  };\n\n  const loadFont = () => {\n    if (Platform.OS === \"web\") {\n      return (\n        <style type=\"text/css\">{`\n\t\t\t\t @font-face {\n\t\t\t\t  font-family: 'MaterialIcons';\n\t\t\t\t  src: url(${require(\"react-native-vector-icons/Fonts/MaterialIcons.ttf\")}) format('truetype');\n\t\t\t\t}\n\t\t\t\t@font-face {\n\t\t\t\t  font-family: 'FontAwesome';\n\t\t\t\t  src: url(${require(\"react-native-vector-icons/Fonts/FontAwesome.ttf\")}) format('truetype');\n\t\t\t\t}\n\t\t\t\t@font-face {\n\t\t\t\t  font-family: 'Ionicons';\n\t\t\t\t  src: url(${require(\"react-native-vector-icons/Fonts/Ionicons.ttf\")}) format('truetype');\n\t\t\t\t}\n\t\t\t\t`}</style>\n      );\n    }\n  };\n\n  return (\n    <React.Fragment>\n      {loadFont()}\n      <SearchBar\n        onPress={null}\n        iconName=\"arrow-left\"\n        placeholder=\"Nitendo\"\n        value={keyword}\n        setValue={setKeyword}\n      />\n      <RenderListSearch />\n    </React.Fragment>\n  );\n}\n\nconst styles = StyleSheet.create({});\n\nexport default Search;\n","\"use strict\";\n\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  StyleSheet,\n  View,\n  ImageBackground,\n  ScrollView,\n  Platform\n} from \"react-native\";\nimport { Text, Card, Button, Header } from \"react-native-elements\";\nimport Icon from \"react-native-vector-icons/FontAwesome\";\nimport { Helpers } from \"../../Theme\";\nimport NavigationService from \"../../Services/NavigationService\";\nimport PurchaseActions from \"../../Stores/Purchase/Actions\";\n\nfunction DetailProduct({ navigation }) {\n  const dispatch = useDispatch();\n  // const { data } = useSelector(state => state.Purchase);\n  const { title, imageUrl, description, price, id } = navigation.getParam(\n    \"item\"\n  );\n  const [love, setLove] = useState(false);\n\n  const addProduct = item => {\n    dispatch(PurchaseActions.addProduct(item));\n  };\n\n  const ImageSection = () => (\n    <Card>\n      <View style={[Helpers.fill, Helpers.row, Helpers.mainCenter]}>\n        <ImageBackground\n          source={{ uri: imageUrl }}\n          style={{ flex: 1, height: 230 }}\n        ></ImageBackground>\n      </View>\n    </Card>\n  );\n\n  const TitleSection = () => (\n    <View\n      style={[\n        Helpers.row,\n        Helpers.mainSpaceBetween,\n        { paddingHorizontal: 15, paddingVertical: 15 }\n      ]}\n    >\n      <View>\n        <Text h4>{title}</Text>\n      </View>\n      <View>\n        <Icon\n          name=\"heart\"\n          color={love ? \"red\" : \"gray\"}\n          size={25}\n          onPress={e => {\n            e.preventDefault();\n            setLove(!love);\n          }}\n        />\n      </View>\n    </View>\n  );\n  const DescriptionSection = () => (\n    <ScrollView>\n      <View\n        style={[\n          Helpers.column,\n          Helpers.mainStart,\n          { flex: 2, paddingHorizontal: 15 }\n        ]}\n      >\n        <Text>\n          {description ||\n            \"this is the placeholder of description adnakl alad lad adsad  ahks hakd kad kjada dhak hdjkadj adjka dja djkadka dkja\"}\n        </Text>\n      </View>\n    </ScrollView>\n  );\n  const BuySection = () => (\n    <View style={[Helpers.row, Helpers.mainEnd, Helpers.fill]}>\n      <View style={[Helpers.mainCenter, Helpers.colCenter]}>\n        <Text style={{ fontSize: 20 }}>{price || \"Rp. 100 \"}</Text>\n      </View>\n      <View\n        style={[Helpers.mainCenter, { paddingHorizontal: 15, width: \"50%\" }]}\n      >\n        <Button\n          title=\"Buy\"\n          onPress={e => {\n            e.preventDefault();\n            addProduct(navigation.getParam(\"item\"));\n          }}\n        />\n      </View>\n    </View>\n  );\n\n  return (\n    <React.Fragment>\n      <Header\n        leftComponent={\n          <Icon\n            name=\"arrow-left\"\n            size={20}\n            color=\"white\"\n            onPress={() => {\n              NavigationService.goBack();\n            }}\n          />\n        }\n        centerComponent={{\n          text: \"Detail Product\",\n          style: { color: \"#fff\", fontSize: 20 }\n        }}\n        rightComponent={\n          Platform.OS === \"web\" ? (\n            <a\n              href={`https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(\n                \"http://amoebadev.home.blog\"\n              )}&t=${title}`}\n              target=\"_blank\"\n              title=\"Share on Facebook\"\n            >\n              <Icon name=\"share\" size={20} color=\"white\" />\n            </a>\n          ) : (\n            <Icon name=\"share\" size={20} color=\"white\" />\n          )\n        }\n      />\n      <View style={[Helpers.fill]}>\n        <ScrollView>\n          <ImageSection />\n          <TitleSection />\n          <DescriptionSection />\n          <BuySection />\n        </ScrollView>\n      </View>\n    </React.Fragment>\n  );\n}\n\nexport default DetailProduct;\n","// import {\n//   createNavigator,\n//   SwitchRouter,\n//   SceneView,\n//   getActiveChildNavigationOptions\n// } from \"@react-navigation/core\";\nimport { createBrowserApp, Link } from \"@react-navigation/web\";\nimport { createAppContainer } from 'react-navigation';\nimport { createStackNavigator } from 'react-navigation-stack';\nimport { Platform } from 'react-native';\nimport SplashScreen from '../Containers/SplashScreen/SplashScreen';\nimport TabNavigator from '../Navigators/TabNavigator';\nimport LoginScreen from '../Containers/Login';\nimport SearchScreen from '../Containers/Search';\nimport DetailScreen from '../Containers/DetailProduct';\nwindow.__DEV__ = true;\n/**\n * The root screen contains the application's navigation.\n *\n * @see https://reactnavigation.org/docs/en/hello-react-navigation.html#creating-a-stack-navigator\n */\nconst StackNavigator = createStackNavigator(\n  {\n    // Create the application routes here (the key is the route name, the value is the target screen)\n    // See https://reactnavigation.org/docs/en/stack-navigator.html#routeconfigs\n    SplashScreen: SplashScreen,\n    Login : {\n      screen: LoginScreen,\n      path: 'login'\n    },\n    Home : {\n      screen :TabNavigator,\n      path: ''\n    },\n    Search: {\n      screen: SearchScreen,\n      path: 'search'\n    },\n    Detail: {\n      screen: DetailScreen,\n      path: 'detail/'\n    }\n  },\n  {\n    // By default the application will show the splash screen\n    initialRouteName: 'SplashScreen',\n    // See https://reactnavigation.org/docs/en/stack-navigator.html#stacknavigatorconfig\n    headerMode: 'none',\n    lazyLoad: true,\n  }\n);\n\nconst ContainerApp = Platform.OS === 'web' ? createBrowserApp(StackNavigator) : createAppContainer(StackNavigator);\nexport default ContainerApp;\n","import React, { Component } from 'react'\nimport NavigationService from '../../Services/NavigationService'\nimport AppNavigator from '../../Navigators/AppNavigator'\nimport { View, Platform } from 'react-native'\nimport { connect } from 'react-redux'\nimport StartupActions from '../../Stores/Startup/Actions'\nimport { PropTypes } from 'prop-types'\nimport { Helpers } from '../../Theme'\n\nclass RootScreen extends Component {\n  componentDidMount() {\n    // Run the startup saga when the application is starting\n    this.props.startup();\n\n  }\n\n  loadFont() {\n    if(Platform.OS === 'web')\n    {\n      return (\n        <style type=\"text/css\">{`\n         @font-face {\n          font-family: 'MaterialIcons';\n          src: url(${require('react-native-vector-icons/Fonts/MaterialIcons.ttf')}) format('truetype');\n        }\n        @font-face {\n          font-family: 'FontAwesome';\n          src: url(${require('react-native-vector-icons/Fonts/FontAwesome.ttf')}) format('truetype');\n        }\n        @font-face {\n          font-family: 'Ionicons';\n          src: url(${require('react-native-vector-icons/Fonts/Ionicons.ttf')}) format('truetype');\n        }\n        `}</style>\n      )\n    }\n  }\n\n  render() {\n    return (\n      <View style={Helpers.fill}>\n        {\n          this.loadFont()\n        }\n        <AppNavigator\n          // Initialize the NavigationService (see https://reactnavigation.org/docs/en/navigating-without-navigation-prop.html)\n          ref={(navigatorRef) => {\n            NavigationService.setTopLevelNavigator(navigatorRef)\n          }}\n        />\n      </View>\n    )\n  }\n}\n\nRootScreen.propTypes = {\n  startup: PropTypes.func,\n}\n\nconst mapStateToProps = (state) => ({})\n\nconst mapDispatchToProps = (dispatch) => ({\n  startup: () => dispatch(StartupActions.startup()),\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RootScreen)\n","import { combineReducers } from 'redux';\nimport configureStore from './CreateStore';\nimport rootSaga from '../Sagas';\nimport { reducer as AuthReducer } from './Auth/Reducers';\nimport { reducer as PurchaseReducer } from './Purchase/Reducers';\nimport { reducer as HomeReducer } from './Home/Reducers';\n\nexport default () => {\n  const rootReducer = combineReducers({\n    /**\n     * Register your reducers here.\n     * @see https://redux.js.org/api-reference/combinereducers\n     */\n    Auth: AuthReducer,\n    Purchase: PurchaseReducer,\n    Home: HomeReducer,\n  });\n\n  return configureStore(rootReducer, rootSaga);\n}\n","import React, { Component } from \"react\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/lib/integration/react\";\nimport createStore from \"./Stores\";\nimport RootScreen from \"./Containers/Root/RootScreen\";\nimport { ThemeProvider } from \"react-native-elements\";\nimport { StatusBar, ActivityIndicator } from \"react-native\";\nimport { axiosInstance } from \"./Services/API\";\nimport { Colors } from \"./Theme\";\n\nconst { store, persistor } = createStore();\n\nconst theme = {\n  colors: {\n    primary: Colors.primary,\n    secondary: Colors.darkPrimary,\n    divider: Colors.divider\n  },\n  Button: {\n    titleStyle: {\n      color: Colors.white\n    },\n    raised: true\n  },\n  Text: {\n    style: {\n      color: Colors.text\n    }\n  }\n};\n\nexport default class App extends Component {\n  render() {\n    return (\n      /**\n       * @see https://github.com/reduxjs/react-redux/blob/master/docs/api/Provider.md\n       */\n      <Provider store={store}>\n        {/**\n         * PersistGate delays the rendering of the app's UI until the persisted state has been retrieved\n         * and saved to redux.\n         * The `loading` prop can be `null` or any react instance to show during loading (e.g. a splash screen),\n         * for example `loading={<SplashScreen />}`.\n         * @see https://github.com/rt2zz/redux-persist/blob/master/docs/PersistGate.md\n         */}\n        <PersistGate loading={<ActivityIndicator />} persistor={persistor}>\n          <ThemeProvider theme={theme}>\n            <StatusBar backgroundColor=\"#FFC804\" barStyle=\"light-content\" />\n            <RootScreen />\n          </ThemeProvider>\n        </PersistGate>\n      </Provider>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();"],"sourceRoot":""}